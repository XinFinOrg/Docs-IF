{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction A Global Framework, messaging and transaction standard built on XinFin Hybrid Blockchain Network(Private+Public). InFactor.io is built on top of XDC-I11 messaging protocol that is built alongside ISO20022 standard for Trade Instruments, mainly Invoices. About Us Supply and demand is the basis of creation of any economy. For any financial value to be generated, there needs to be an urge for it s consumption and a fair quality and capacity of the supply to be available for the consumer to accept it. Supply and demand is the fundamental matchmaking that creates economic growth potential. There is one more factor that influences this matchmaking equation. It is the availability and intent of a financier to step in and support the supplier to bear the cost of producing a supply till the consumer is able to consume the supply and meet the monetary obligation for it s consumption. InFactor captures the existing data sets of the domestic invoice factoring markets from regulated institutions and relays them into global order book market based on ISO20022 standard for making it accessible to international factors using a Fiat based cryptocurrency of their choice (USD,JPY,EUR,GBP). The fiat liquidity relay can be used by any regulated financial institution to get wider and cheaper access to capital from entities with international float. InFactor is a use case of Invoice Factoring. Invoice Factoring is a financial transaction and a type of debtor finance in which a business sells its accounts receivable (invoices) to a third party (called a factor) at a discount. There are 3 entities involved : Supplier : Supplier uploads invoice to the platform. Buyer : Buyer verifys invoice and pay the invoice amount to financer on payout date. Financer : Financer propose and provide factoring service to supplier against invoice.","title":"Introduction"},{"location":"#about-us","text":"Supply and demand is the basis of creation of any economy. For any financial value to be generated, there needs to be an urge for it s consumption and a fair quality and capacity of the supply to be available for the consumer to accept it. Supply and demand is the fundamental matchmaking that creates economic growth potential. There is one more factor that influences this matchmaking equation. It is the availability and intent of a financier to step in and support the supplier to bear the cost of producing a supply till the consumer is able to consume the supply and meet the monetary obligation for it s consumption. InFactor captures the existing data sets of the domestic invoice factoring markets from regulated institutions and relays them into global order book market based on ISO20022 standard for making it accessible to international factors using a Fiat based cryptocurrency of their choice (USD,JPY,EUR,GBP). The fiat liquidity relay can be used by any regulated financial institution to get wider and cheaper access to capital from entities with international float. InFactor is a use case of Invoice Factoring. Invoice Factoring is a financial transaction and a type of debtor finance in which a business sells its accounts receivable (invoices) to a third party (called a factor) at a discount. There are 3 entities involved : Supplier : Supplier uploads invoice to the platform. Buyer : Buyer verifys invoice and pay the invoice amount to financer on payout date. Financer : Financer propose and provide factoring service to supplier against invoice.","title":"About Us"},{"location":"Guide/API/","text":"API Documentation Welcome to the SME API. Authentication A JSON Web Token is used to send information that can be verified and trusted by means of a digital signature. It comprises a compact and URL-safe JSON object, which is cryptographically signed to verify its authenticity, and can also be encrypted if the payload contains sensitive information. Application may request to access routes, services, or resources on behalf of that user. To do so, it uses an access token, which is in the form of a JWT token. User has to provide JWT token in header as a authorization in every subsequent request after login. Authentication Authenticate API in environment with token in response. HTTP Request POST 5.133.176.54:82/api/v1.0/auth/authenticate Request user string API Key or any secret key REQUIRED Response 200: OK { success : true, token : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1NDk1MzEzNTIsImV4cCI6MTU0OTYxNzc1Mn0.6cTXghU1IdDreucri4nQKK-Q2HjnHgL7CtTKmvYTRzo } 403: Forbidden { success : false, message : 403 - Invalid API secret key. }","title":"API Documentataion"},{"location":"Guide/API/#authentication","text":"A JSON Web Token is used to send information that can be verified and trusted by means of a digital signature. It comprises a compact and URL-safe JSON object, which is cryptographically signed to verify its authenticity, and can also be encrypted if the payload contains sensitive information. Application may request to access routes, services, or resources on behalf of that user. To do so, it uses an access token, which is in the form of a JWT token. User has to provide JWT token in header as a authorization in every subsequent request after login. Authentication Authenticate API in environment with token in response.","title":"Authentication"},{"location":"Guide/API/#http-request","text":"POST 5.133.176.54:82/api/v1.0/auth/authenticate Request user string API Key or any secret key REQUIRED Response 200: OK { success : true, token : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1NDk1MzEzNTIsImV4cCI6MTU0OTYxNzc1Mn0.6cTXghU1IdDreucri4nQKK-Q2HjnHgL7CtTKmvYTRzo } 403: Forbidden { success : false, message : 403 - Invalid API secret key. }","title":"HTTP Request"},{"location":"Guide/Conduct_POC/","text":"1. Setup a MasterNode 2. Factoring Process In a typical factoring on infactor.io, there are 3 parties involved. Supplier, Buyer and Financier. Supplier is a starting point. Supplier uploads Invoice, Buyer validates invoice and Financier factors on invoice. Register on http://infactor.io. Choose your role(Supplier, Buyer, Financier) On successful registration, A wallet account is automatically created for you. Note : To register, you must have uploaded KYC, staked XDC and you are a part of XDC Network by running a masternode. In case of any malicious activity the staked XDC will be frozen. Supplier uploads invoice details and related documents. Buyer verfies invoice authenticity and approve/reject invoice. Supplier selects an approved invoice for factoring. All financiers on the platform receive new factoring notification. Financer sends a factoring proposal along with related documents to supplier. The proposal includes interest rate/month and the upfront payment percent of total invoice amount. Supplier approves the factoring proposal and the notification is sent to selected financier. Financier pays first payment to supplier as per factoring criteria Note : To transfer amount, a user has to load the amount into a wallet. A deposit functionality is present in user profile section. Buyer pays invoice amount to financier. A financier pays final payment(by deducting fees) to supplier. Fee calculation is done on the basis of Interest Rate (as per factoring criteria) and payout date. If Buyer pays invoice amount earlier to financier, fees will be less and vice versa. The fees calculation is done on the smart contract. Financier and Supplier can rate each other.","title":"Conduct POC"},{"location":"Guide/Conduct_POC/#1-setup-a-masternode","text":"","title":"1. Setup a MasterNode"},{"location":"Guide/Conduct_POC/#2-factoring-process","text":"In a typical factoring on infactor.io, there are 3 parties involved. Supplier, Buyer and Financier. Supplier is a starting point. Supplier uploads Invoice, Buyer validates invoice and Financier factors on invoice. Register on http://infactor.io. Choose your role(Supplier, Buyer, Financier) On successful registration, A wallet account is automatically created for you. Note : To register, you must have uploaded KYC, staked XDC and you are a part of XDC Network by running a masternode. In case of any malicious activity the staked XDC will be frozen. Supplier uploads invoice details and related documents. Buyer verfies invoice authenticity and approve/reject invoice. Supplier selects an approved invoice for factoring. All financiers on the platform receive new factoring notification. Financer sends a factoring proposal along with related documents to supplier. The proposal includes interest rate/month and the upfront payment percent of total invoice amount. Supplier approves the factoring proposal and the notification is sent to selected financier. Financier pays first payment to supplier as per factoring criteria Note : To transfer amount, a user has to load the amount into a wallet. A deposit functionality is present in user profile section. Buyer pays invoice amount to financier. A financier pays final payment(by deducting fees) to supplier. Fee calculation is done on the basis of Interest Rate (as per factoring criteria) and payout date. If Buyer pays invoice amount earlier to financier, fees will be less and vice versa. The fees calculation is done on the smart contract. Financier and Supplier can rate each other.","title":"2. Factoring Process"},{"location":"Guide/how_to_setup/","text":"1. Website Set-Up Note: You will need to have Node 6.X.X version on your local development machine. You can use nvm to easily switch Node versions between different projects. I.Clone the Repository To clone the repository, git clone (URL of repository) download the repository and extract it. After cloning the repository, you need to add a file on the repository. File location: (root of infactor repository)/Config/config.js File content should be copied from default Config.js and paste in config.js II. Install dependencies a. Install Node modules npm install b. Install Angular Modules bower install III. Deploy Contract To connect with XinFin Blockchain, follow these instructions a. Compile Contract truffle compile b. Deploy Contract truffle migrate IV. Start Server npm start","title":"How to setup"},{"location":"Guide/how_to_setup/#1-website-set-up","text":"Note: You will need to have Node 6.X.X version on your local development machine. You can use nvm to easily switch Node versions between different projects.","title":"1. Website Set-Up"},{"location":"Guide/how_to_setup/#iclone-the-repository","text":"To clone the repository, git clone (URL of repository) download the repository and extract it. After cloning the repository, you need to add a file on the repository. File location: (root of infactor repository)/Config/config.js File content should be copied from default Config.js and paste in config.js","title":"I.Clone the Repository"},{"location":"Guide/how_to_setup/#ii-install-dependencies","text":"a. Install Node modules npm install b. Install Angular Modules bower install","title":"II. Install dependencies"},{"location":"Guide/how_to_setup/#iii-deploy-contract","text":"To connect with XinFin Blockchain, follow these instructions a. Compile Contract truffle compile b. Deploy Contract truffle migrate","title":"III. Deploy Contract"},{"location":"Guide/how_to_setup/#iv-start-server","text":"npm start","title":"IV. Start Server"},{"location":"Media/Articles/","text":"1. XinFin Presenting inFactor.io to BPIFrance in Singapore.","title":"Articles"},{"location":"faq/General/","text":"What is TradeFinex Platform? TradeFinex is a decentralized peer to peer global Trade Infrastructure Finance platform built on open standards. It provides seamless connectivity between global public investors, contract authority, project company, regulators, and other key project finance stakeholders. It brings together financiers investors, buyers, suppliers as well as government and regulatory bodies. TradeFinex aims to minimize global trade finance gap as well as infrastructure deficit by minimizing inefficiencies and increasing liquidity by leveraging blockchain technology. Its key features include decentralized platform, smart contracting, asset tokenization, integrated wallets, real time global and cross border payments and settlements and regulatory sandbox environment powered by XinFin s enterprise ready hybrid blockchain protocol. TradeFinex s Application Programming Interfaces (APIs) also provide further interoperability with other systems and platforms, thus enriching the whole trade finance ecosystem. XinFin's TradeFinex platform supports which blockchain? TradeFinex is built on Ethereum's ERC 20 token creation conventions smart contract which facilitates crowd sale and related smart contracts execution on its networks. How will I be assured that my contract is secure? Our contracts have been audited by a reputed smart contract auditing firm. Our contract came out with no vulnerabilities. How to know if a smart contract is a good fit for your use case? To find out if a smart contract is a good fit for your business, reach out to us! We'll be happy to answer your all questions and help you guide through the process. How to communicate with other parties on TradeFinex? TradeFinex comes with one-of-its-kind messaging board that is user-friendly, effective, and prompt. The participants can use this messaging feature to chat with each other. Participants can exchange files, drawings, documents, and other information on real-time basis with other parties. The participants are required to select the project they are interested in. After selecting the project, the participant can initiate chat with other parties by clicking on the \"Send Message\" button. Participants can exchange messages pertaining to techno-commercial details to deal with the other parties. Contact information of the registered users will be visible to other registered users. They can reach out to each other on their phone numbers and email ids stated in the contact information. Will TradeFinex allow for XDC purchase? TradeFinex is a market place for peer to peer cross border trade and finance. Tokens cannot be purchased on TradeFinex. XDC tokens can be purchased on the listed exchanges. When can I expect the full TradeFinex site to roll out? The Alpha version of TradeFinex is currently under testing and will be migrated to live environment in the first week of December. Does IoT integration layer work on TradeFinex? The XDC protocol has Resource Manager and Oracle Services built in to it. IoT devices can connect securely to the resource manager and very tightly controlled oracle services can verify information related to the IoT service. This data is available to the smart contract to execute a set of predefined conditions. What is the process to advertise with TradeFinex? The interested individual/company/institution/ community or Government is required to click on the \"Advertise With Us\" button in the Footer of TradeFinex site. The interested candidate is required to fill in their details in the given form and submit it using \"Submit message\" button. TradeFinex team will reach out to the interested candidate either via phone or email within 24 hours. Please note, due to growing queries and proposals, it might take anywhere between 48 to 72 hours to reply. How to enable/disable notifications? The participants can enable/disable notifications by clicking on the \"Settings\" button on Dashboard. The participants can Show/Hide other parties' Notification Visibility, Published Project Visibility, Project Expiration Visibility and Posted New Project Visibility by clicking on \"Yes\" and \"No\" boxes in the drop down menu. However, the participants are required to be logged in as a Beneficiary, Supplier and Financier to enable/disable notifications.","title":"General"},{"location":"misc/wip/","text":"Work in progress We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"},{"location":"misc/wip/#work-in-progress","text":"We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"}]}